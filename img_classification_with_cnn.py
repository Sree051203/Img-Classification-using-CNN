# -*- coding: utf-8 -*-
"""Img Classification with CNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nHDkxOCO4E6EBmiPyF12W1rOZQrRxQ6c
"""

import tensorflow as tf
from tensorflow.keras import layers, models
import numpy as np
import matplotlib.pyplot as plt

(X_train,Y_train),(X_test,Y_test)=tf.keras.datasets.cifar10.load_data()
X_train,X_test=X_train/255.0,X_test/255.0
Y_train=tf.keras.utils.to_categorical(Y_train,10)
Y_test=tf.keras.utils.to_categorical(Y_test,10)

model=models.Sequential([
    layers.Conv2D(32,(3,3),activation='relu',input_shape=(32,32,3)),
    layers.MaxPooling2D((2,2)),
    layers.Conv2D(64,(3,3),activation='relu'),
    layers.Flatten(),
    layers.Dense(64,activation='relu'),
    layers.Dense(10,activation='softmax')])

model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

history=model.fit(X_train,Y_train,epochs=10,validation_data=(X_test,Y_test))

test_loss,test_acc=model.evaluate(X_test,Y_test,verbose=2)
print(test_acc)

predictions=model.predict(X_test)
print("Predicted values:", np.argmax(predictions[0]))